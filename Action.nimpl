module Action;

import KeySequence;
import Icon;
import Object;

flags SignalMask {
    Changed = 1 << 0,
    CheckableChanged = 1 << 1,
    EnabledChanged = 1 << 2,
    Hovered = 1 << 3,
    Toggled = 1 << 4,
    Triggered = 1 << 5,
    VisibleChanged = 1 << 6
}

interface SignalHandler {
    void changed();
    void checkableChanged(bool checkable);
    void enabledChanged(bool enabled);
    void hovered();
    void toggled(bool checked_);
    void triggered(bool checked_);
    void visibleChanged();
}

opaque Handle extends Object.Handle {
    void setEnabled(bool state);
    void setText(string text);
    void setSeparator(bool state);

    void setCheckable(bool state);
    void setChecked(bool state);
    
    void setIcon(Icon.Deferred icon);
    void setIconText(string text);
    void setShortcut(KeySequence.Deferred seq);
    void setStatusTip(string tip);
    void setToolTip(string tip);

    void setSignalMask(SignalMask mask);
}

Handle create(Object.Handle owner, SignalHandler handler);
