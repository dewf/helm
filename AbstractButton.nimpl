module AbstractButton;

import Common;
import KeySequence;
import Widget;
import Icon;

flags SignalMask {
    // Widget:
    CustomContextMenuRequested = 1,
    WindowIconChanged = 1 << 1,
    WindowTitleChanged = 1 << 2,

    // AbstractButton:
    Clicked = 1 << 3,
    Pressed = 1 << 4,
    Released = 1 << 5,
    Toggled = 1 << 6
}

interface SignalHandler {
    // Widget:
    void customContextMenuRequested(Point pos);
    void windowIconChanged(Icon.Handle icon);
    void windowTitleChanged(string title);

    // AbstractButton:
    void clicked(bool checkState);
    void pressed();
    void released();
    void toggled(bool checkState);
}

@nodispose
opaque Handle extends Widget.Handle {
    void setAutoExclusive(bool state);
    void setAutoRepeat(bool state);
    void setAutoRepeatDelay(int delay);
    void setAutoRepeatInterval(int interval);
    void setCheckable(bool state);
    void setChecked(bool state);
    void setDown(bool state);
    void setIcon(Icon.Deferred icon);
    void setIconSize(Size size);
    void setShortcut(KeySequence.Deferred seq);
    void setText(string text);
}

// can't create directly
