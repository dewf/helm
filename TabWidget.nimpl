module TabWidget;

import Widget;

flags SignalMask {
    CurrentChanged = 1,
    TabBarClicked = 1 << 1,
    TabBarDoubleClicked = 1 << 2,
    TabCloseRequested = 1 << 3
}

interface SignalHandler {
    void currentChanged(int index);
    void tabBarClicked(int index);
    void tabBarDoubleClicked(int index);
    void tabCloseRequested(int index);
}

enum TabShape { Rounded, Triangular }

opaque Handle extends Widget.Handle {
    void addTab(Widget.Handle page, string label);
    void insertTab(int index, Widget.Handle page, string label);

    Widget.Handle widgetAt(int index);                              // get page @ position (note: Qt method "widget", but that causes a C# name collision, hence "widgetAt")

    void clear();                                                   // remove all widgets without destroying
    void removeTab(int index);

    void setSignalMask(SignalMask mask);
}

Handle create(SignalHandler handler);
