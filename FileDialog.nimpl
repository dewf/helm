module FileDialog;

import Dialog;

flags SignalMask {
    // from Dialog:
    Accepted = 1 << 0,
    Finished = 1 << 1,
    Rejected = 1 << 2,

    // FileDialog:
    CurrentChanged = 1 << 3,
    CurrentUrlChanged = 1 << 4,
    DirectoryEntered = 1 << 5,
    DirectoryUrlEntered = 1 << 6,
    FileSelected = 1 << 7,
    FilesSelected = 1 << 8,
    FilterSelected = 1 << 9,
    UrlSelected = 1 << 10,
    UrlsSelected = 1 << 11
}

enum FileMode {
    AnyFile,
    ExistingFile,
    Directory,
    ExistingFiles
}

enum ViewMode {
    Detail,
    List
}

enum AcceptMode {
    Open,
    Save
}

opaque Handle extends Dialog.Handle {
    void setAcceptMode(AcceptMode mode);
    void setFileMode(FileMode mode);
    void setNameFilter(string filter);
    void setNameFilters(Array<string> filters);
    void setMimeTypeFilters(Array<string> filters);
    void setViewMode(ViewMode mode);
    void setDefaultSuffix(string suffix);
    void setDirectory(string dir);
    void selectFile(string file);
    
    Array<string> selectedFiles();
    
    void setSignalMask(SignalMask mask);
}

interface SignalHandler {
    // from Dialog:
    void accepted();
    void finished(int result);
    void rejected();

    // FileDialog:
    void currentChanged(string path);
    void currentUrlChanged(string url);
    void directoryEntered(string dir);
    void directoryUrlEntered(string url);
    void fileSelected(string file);
    void filesSelected(Array<string> selected);
    void filterSelected(string filter);
    void urlSelected(string url);
    void urlsSelected(Array<string> urls);
}

Handle create(SignalHandler handler);
